@page
@using NGordat.IdentityServer.STS.Configuration.Interfaces;
@inject IStringLocalizer<LoginModel> Localizer
@inject IRootConfiguration RootConfiguration

@model NGordat.IdentityServer.STS.Pages.Account.LoginModel
@{
}

<div class="login-page">
    <div class="page-header">
        <h1>@Localizer["Title"]</h1>
    </div>

    @await Html.PartialAsync("_ValidationSummary")

    <div class="row">

        @if (Model.LoginViewModel.EnableLocalLogin)
        {
            <div class="col-sm-6">
                <div class="card mt-3">
                    <h5 class="card-header">@Localizer["LocalLogin"]</h5>
                    <div class="card-body">
                        <form asp-page="Login">
                            <input type="hidden" asp-for="LoginViewModel.ReturnUrl" />

                            <fieldset>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <bootstrap-input asp-for="LoginViewModel.Username" asp-type="Model.LoginViewModel.GetType()"></bootstrap-input>
                                        <span asp-validation-for="LoginViewModel.Username" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <bootstrap-input-password asp-for="LoginViewModel.Password" asp-type="Model.LoginViewModel.GetType()"></bootstrap-input-password>
                                        <span asp-validation-for="LoginViewModel.Password" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <button type="submit" class="btn btn-primary" asp-page-handler="Login">@Localizer["Continue"]</button>
                                    </div>
                                </div>

                                @if (Model.LoginViewModel.AllowRememberLogin)
                                {
                                    <div class="form-group login-remember row">
                                        <div class="col-sm-9">
                                            <bootstrap-switch asp-for="LoginViewModel.AllowRememberLogin" asp-type="Model.LoginViewModel.GetType()"></bootstrap-switch>
                                        </div>
                                    </div>
                                }

                                @if (RootConfiguration.RegisterConfiguration.Enabled)
                                {
                                    <p>Don't have an account? </p>
                                    <a asp-page="Register">@Localizer["Register"]</a>
                                }

                                <!--Button-->
                                <div class="form-group row">
                                    <div class="col-sm-12">
                                        <a class="btn btn-primary" type="button" asp-page="Register">@Localizer["Register"]</a>
                                        <button class="btn btn-secondary" type="button" value="cancel">@Localizer["Cancel"]</button>
                                        <a asp-action="ForgotPassword" asp-controller="Account" class="btn btn-info" value="forgot">@Localizer["Forgot"]</a>

                                    </div>
                                </div>
                            </fieldset>
                        </form>
                    </div>
                </div>
            </div>
        }

        @if (Model.LoginViewModel.VisibleExternalProviders.Any())
        {
            <div class="col-sm-6 external-providers">
                <div class="card mt-3">
                    <h5 class="card-header">@Localizer["ExternalLogin"]</h5>
                    <div class="card-body">
                        <ul class="list-inline">
                            @foreach (var provider in Model.LoginViewModel.VisibleExternalProviders)
                            {
                                <li class="list-inline-item">
                                    <a class="btn btn-primary"
                                        asp-page="ExternalLogin"
                                        asp-route-provider="@provider.AuthenticationScheme"
                                        asp-route-returnUrl="@Model.LoginViewModel.ReturnUrl">
                                        @provider.DisplayName
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        }

        @if (!Model.LoginViewModel.EnableLocalLogin && !Model.LoginViewModel.VisibleExternalProviders.Any())
        {
            <div class="alert alert-warning">
                <strong>@Localizer["InvalidRequest"]</strong>
                @Localizer["NoSchema"]
            </div>
        }
    </div>
</div>
